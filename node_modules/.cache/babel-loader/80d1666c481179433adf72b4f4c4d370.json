{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/robofriends/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport '../containers/App.css';\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport { setSearchField } from \"../actions\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => {\n      return;\n    }\n  };\n};\n\nclass App extends Component {\n  //constructor\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  } //static getDerivedStateFromProps()\n  //empty\n  //render()\n\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Robofriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }))));\n  } //componentDidMount()\n\n\n  componentDidMount() {\n    //fetching api\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  } //closing braces\n\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/user/Desktop/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","mapStateToProps","state","searchField","searchRobots","robots","requestRobots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","constructor","render","props","filteredRobots","filter","robot","name","toLowerCase","includes","componentDidMount","fetch","then","response","json","users","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,uBAAP;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD7B;AAEHE,IAAAA,MAAM,EAAEH,KAAK,CAACI,aAAN,CAAoBD,MAFzB;AAGHE,IAAAA,SAAS,EAAEL,KAAK,CAACI,aAAN,CAAoBC,SAH5B;AAIHC,IAAAA,KAAK,EAAEN,KAAK,CAACI,aAAN,CAAoBE;AAJxB,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADhC;AAEHC,IAAAA,eAAe,EAAE,MAAM;AACnB;AACH;AAJE,GAAP;AAMH,CAPD;;AASA,MAAMC,GAAN,SAAkBtB,SAAlB,CAA4B;AACxB;AACAuB,EAAAA,WAAW,GAAG;AACV;AACA,SAAKf,KAAL,GAAa;AACTG,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH,GAPuB,CASxB;AACA;AAEA;;;AACAa,EAAAA,MAAM,GAAG;AACL,UAAM;AAACb,MAAAA;AAAD,QAAW,KAAKH,KAAtB;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcQ,MAAAA;AAAd,QAAiC,KAAKQ,KAA5C;AAEA,UAAMC,cAAc,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAK,IAAI;AAC1C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCtB,WAAW,CAACqB,WAAZ,EAAlC,CAAP;AACH,KAFsB,CAAvB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEb,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAES,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAHJ,CADJ;AAWH,GA/BuB,CAiCxB;;;AACAM,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAC3B,MAAAA,MAAM,EAAE0B;AAAT,KAAd,CAFnB;AAGH,GAvCuB,CAyC5B;;;AAzC4B;;AA4C5B,eAAepC,OAAO,CAACM,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport '../containers/App.css';\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport { setSearchField } from \"../actions\";\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => {\n            return \n        }\n    }\n}\n\nclass App extends Component {\n    //constructor\n    constructor() {\n        super();\n        this.state = {\n            robots: []\n        }\n    }\n\n    //static getDerivedStateFromProps()\n    //empty\n\n    //render()\n    render() {\n        const {robots} = this.state;\n        const {searchField, onSearchChange } = this.props;\n\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        return (\n            <div className='tc'>\n                <h1 className='f2'>Robofriends</h1>\n                <SearchBox searchChange={onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        )\n    }\n\n    //componentDidMount()\n    componentDidMount() {\n        //fetching api\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}))\n    }\n\n//closing braces\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}